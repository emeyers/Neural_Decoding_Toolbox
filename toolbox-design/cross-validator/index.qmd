---
title: Cross-validator
toc: true
---

<p class="ethan_opening_paragraph" style="padding-bottom: 0% !important;">Cross-validators (CV) take a classifier (CL), a datasource (DS) and optionally feature preprocessor (FP) objects, and they run a cross-validation decoding scheme by training and testing the classifier with data generated from the datasource object (and possibly fed through the feature pre-processing first). 

The Neural Decoding Toolbox comes with following classifier objects:

<a href="http://www.readout.info/toolbox-design/cross-validator/standard_resample_cv/" title="standard_resample_CV">standard_resample_CV</a>


## Methods that must be implemented

Objects that are cross-validators must implement the following method:

<p class="ethan_bold_method">DECODING_RESULTS = cv.run_cv_decoding</p>
<ul><li class="ethan_method_explanation" style="margin-left:1em; margin-right:1em">This method uses a datasource (DS) to generate training and test splits of the data, optionally applies feature preprocessors (FP) to the training and test data, sends the training data to a classifier (CL) which learns the relationship between the data and the labels, and then tests the classifier using the test data generated by the datasource (note that a datasource and a classifier must be set prior to running this method). This method may repeat the cross-validation decoding procedure multiple times by generating different data splits from the datasource in order to get more robust measures of the decoding accuracy.</li></ul>

